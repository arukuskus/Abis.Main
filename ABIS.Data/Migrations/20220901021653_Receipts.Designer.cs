// <auto-generated />
using System;
using ABIS.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ABIS.Data.Migrations
{
    [DbContext(typeof(ABISContext))]
    [Migration("20220901021653_Receipts")]
    partial class Receipts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ABIS.Data.Models.Instance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("info")
                        .HasComment("какая - то информация о книге");

                    b.Property<string>("ReceiptName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("receipt_name")
                        .HasComment("в каком поступлении пришел этот экземпляр");

                    b.HasKey("Id");

                    b.ToTable("instances", (string)null);

                    b.HasComment("таблица экземпляров книг");
                });

            modelBuilder.Entity("ABIS.Data.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date")
                        .HasComment("дата создания поступления");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid")
                        .HasColumnName("instance_id")
                        .HasComment("индекс экземпляра, внесенного в это поступление");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name")
                        .HasComment("наименование поступления");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.ToTable("receipts", (string)null);

                    b.HasComment("таблица поступлений");
                });

            modelBuilder.Entity("ABIS.Data.Models.Receipt", b =>
                {
                    b.HasOne("ABIS.Data.Models.Instance", null)
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
